on:
  push:
    branches: [ "main","action-test" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        platform:
          - ubuntu-latest
        architecture:
          - x64
          - arm64
          - x86

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v3

    - name: Install git submodules
      run: git submodule update --init --recursive

    - name: Set architecture
      run: echo "ARCHITECTURE=${{ matrix.architecture }}" >> $GITHUB_ENV

    - name: Install dependents
      run: |
        sudo apt-get update 
        sudo apt-get install libcurl4-openssl-dev libssl-dev ninja-build tree -y
  
    - name: Install vcpkg
      run: |
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        ./bootstrap-vcpkg.sh
        ./vcpkg integrate install

    - name: Cache
      uses: actions/cache@v3
      with:
        # Assuming that vcpkg is installed in `~/vcpkg`
        # Assuming that the build directory is `./build`
        path: |
          ./vcpkg
        key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-${{ hashFiles('./vcpkg.json')}}
        restore-keys: |
          vcpkg-

    - name: Install vcpkg package
      run: |
        vcpkg install

    - name: Save vcpkg Cache
      uses: actions/cache@v3
      with:
        path: ./vcpkg
        key: ${{ runner.os }}-${{ env.BUILD_TYPE }}-${{ hashFiles('**/CMakeLists.txt') }}-${{ hashFiles('./vcpkg.json')}}


    - name: Configure CMake
      run: |
        mkdir build
        cmake -S . -B  ./build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_PREFIX_PATH=${{github.workspace}}/vcpkg/installed/${{ matrix.architecture }}-linux -GNinja
      working-directory: ${{github.workspace}}


    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}


    - name: List files
      run: |
        tree -a -d ${{github.workspace}}
      working-directory: ${{github.workspace}}
    
    - name: artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ runner.os }}-${{ matrix.architecture }}-${{ env.BUILD_TYPE }}
        path: ${{github.workspace}}/build/bin/*